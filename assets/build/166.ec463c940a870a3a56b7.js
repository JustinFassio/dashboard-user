"use strict";(globalThis.webpackChunkathlete_dashboard_child=globalThis.webpackChunkathlete_dashboard_child||[]).push([[166],{403:(e,a,i)=>{i.d(a,{$:()=>t});var s=i(848);i(609);const t=({children:e,variant:a="primary",feature:i,className:t="",...r})=>{const n=["btn",`btn--${a}`,i&&`btn--feature-${i}`,t].filter(Boolean).join(" ");return(0,s.jsx)("button",{className:n,...r,children:e})}},166:(e,a,i)=>{i.d(a,{ProfileFeature:()=>z});var s,t=i(848),r=i(609),n=i.n(r),l=i(621);l.i.PROFILE_UPDATED,l.i.PROFILE_LOADED,l.i.PROFILE_ERROR,l.i.PROFILE_ERROR,function(e){e.FETCH_REQUEST="profile:fetch-request",e.FETCH_SUCCESS="profile:fetch-success",e.FETCH_ERROR="profile:fetch-error",e.UPDATE_REQUEST="profile:update-request",e.UPDATE_SUCCESS="profile:update-success",e.UPDATE_ERROR="profile:update-error",e.SECTION_CHANGE="profile:section-change"}(s||(s={}));var o=i(379),c=i(813);const d=(0,r.createContext)(null),h={age:0,gender:"",medicalNotes:"",emergencyContactName:"",emergencyContactPhone:"",injuries:[]},u=({children:e})=>{const{user:a,isAuthenticated:i,isLoading:s,refreshUser:n}=(0,o.Jd)(),[l,u]=(0,r.useState)(null),[m,p]=(0,r.useState)(!1),[f,g]=(0,r.useState)(null),v=(0,r.useMemo)((()=>{const e=window.athleteDashboardData?.apiUrl||"",a=window.athleteDashboardData?.nonce||"";return console.log("ProfileContext: Initializing service with:",{apiUrl:e?"[SET]":"[MISSING]",nonce:a?"[SET]":"[MISSING]"}),new c.p(e,a)}),[]),x=(0,r.useRef)({totalRequests:0,successfulRequests:0,failedRequests:0,lastError:null});(0,r.useEffect)((()=>{if(!m){const e=x.current;console.log("ProfileContext: Endpoint Statistics",{total:e.totalRequests,successful:e.successfulRequests,failed:e.failedRequests,successRate:e.totalRequests?(e.successfulRequests/e.totalRequests*100).toFixed(1)+"%":"N/A",lastError:e.lastError})}}),[m]);const y=(0,r.useRef)(!1),j=(0,r.useRef)(0),b=(0,r.useRef)(0);(0,r.useEffect)((()=>{const e=Date.now();e-b.current<1e3||(b.current=e,console.group("ProfileContext: User Change"),console.log("Current user:",a),console.log("Is authenticated:",i),console.log("User loading:",s),console.log("Has user ID:",!!a?.id),console.groupEnd())}),[a,i,s]);const w=(0,r.useCallback)((async()=>{if(s)return void console.log("ProfileContext: User context still loading, waiting...");if(!i||!a?.id)return console.log("ProfileContext: User not authenticated or missing ID, skipping profile load"),u(null),void p(!1);const e=Date.now();if(y.current||e-j.current<1e3)console.log("ProfileContext: Skipping load - too soon or already in progress");else{y.current=!0,j.current=e,x.current.totalRequests++;try{console.group("ProfileContext: Loading Profile"),console.log("Current user ID:",a.id),console.log("API URL:",window.athleteDashboardData?.apiUrl),console.log("Nonce present:",!!window.athleteDashboardData?.nonce),p(!0),g(null);const e=performance.now(),i=await v.fetchProfile(a.id),s=performance.now();if(console.log("Profile data received:",i),console.log("Request duration:",Math.round(s-e),"ms"),!i)throw new Error("No profile data received from server");const t={...h,...i,id:a.id,username:a.username,email:a.email,displayName:a.displayName,firstName:a.firstName,lastName:a.lastName};console.log("Merged profile data:",t),u(t),x.current.successfulRequests++,x.current.lastError=null}catch(e){const a=e instanceof Error?e.message:"An unexpected error occurred";console.error("Error loading profile:",e),console.error("Error message:",a),g(a),u(null),x.current.failedRequests++,x.current.lastError=a}finally{p(!1),y.current=!1,console.log("Profile load complete. Loading state set to false."),console.groupEnd()}}}),[a,s,i]);(0,r.useEffect)((()=>{if(s)return void console.log("ProfileContext: Waiting for user context to complete loading...");if(!i||!a?.id)return console.log("ProfileContext: User not authenticated, clearing profile"),u(null),void p(!1);const e=setTimeout((()=>{console.log("ProfileContext: User authenticated, initiating profile load:",a.id),w()}),100);return()=>clearTimeout(e)}),[a?.id,i,s,w]);const _=(0,r.useCallback)((async()=>{console.log("ProfileContext: Refreshing profile..."),await w()}),[w]),N=(0,r.useCallback)((async e=>{if(!a?.id||!l){const e="User not authenticated or profile not loaded";throw console.error("ProfileContext: Update failed -",e),new Error(e)}try{console.group("ProfileContext: Updating Profile"),console.log("Current profile:",l),console.log("Update data:",e),g(null);const i={...e,email:void 0===e.email?void 0:e.email?.trim()||null};console.log("Normalized update data:",i);const s=await v.updateProfile(a.id,i);console.log("Profile update successful:",s);const t={...l,...s};console.log("Merged updated profile:",t),u(t),console.log("Refreshing user data for consistency"),await n()}catch(e){const a=e instanceof Error?e.message:"Failed to update profile";throw console.error("Error updating profile:",e),console.error("Error message:",a),g(a),e}finally{console.groupEnd()}}),[a?.id,l,n]),k=(0,r.useMemo)((()=>({profile:l,updateProfile:N,refreshProfile:_,isLoading:m,error:f,loadProfile:w})),[l,m,f,N,_,w]);return(0,t.jsx)(d.Provider,{value:k,children:e})},m=({label:e})=>(n().useEffect((()=>(performance.mark("feature-loading-start"),()=>{performance.mark("feature-loading-end"),performance.measure("feature-loading-duration","feature-loading-start","feature-loading-end")})),[]),(0,t.jsxs)("div",{className:"feature-loading",children:[(0,t.jsx)("div",{className:"loading-spinner"}),(0,t.jsx)("p",{children:e||"Loading..."})]}));var p=i(57),f=i(403);const g=({name:e,label:a,type:i,value:s,onChange:r,validation:n,options:l,required:o,disabled:c,min:d,max:h,isArray:u=!1,hint:m})=>{const p=a=>{const{value:s,type:t}=a.target;if("number"!==t)r(e,u&&"select"===i?s?[s]:[]:s);else{const a=""===s?void 0:Number(s);r(e,a)}},f=n?.errors&&n.errors.length>0,g="form-field "+(f?"has-error":""),v=s??"";return(0,t.jsxs)("div",{className:g,children:[(0,t.jsxs)("label",{htmlFor:e,children:[a,o&&(0,t.jsx)("span",{className:"required",children:"*"})]}),"select"===i?(0,t.jsxs)("select",{id:e,name:e,value:v,onChange:p,required:o,disabled:c,children:[(0,t.jsxs)("option",{value:"",children:["Select ",a]}),l?.map((e=>(0,t.jsx)("option",{value:e.value,children:e.label},e.value)))]}):(0,t.jsx)("input",{type:i,id:e,name:e,value:v,onChange:p,required:o,disabled:c,min:d,max:h}),m&&(0,t.jsx)("p",{className:"form-field__hint",children:m}),f&&n.errors.map(((e,a)=>(0,t.jsx)("div",{className:"field-error",children:e},a)))]})},v=({data:e,onChange:a,validation:i,onSave:s,isSaving:r,error:n})=>(0,t.jsxs)("div",{className:"BuQvjdiYrmrBbGgL5DVS",children:[(0,t.jsx)("h2",{children:"Basic Information"}),(0,t.jsx)(g,{name:"firstName",label:"First Name",type:"text",value:e.firstName,onChange:a,validation:i?.fieldErrors?.firstName&&{isValid:!1,errors:i.fieldErrors.firstName},required:!0}),(0,t.jsx)(g,{name:"lastName",label:"Last Name",type:"text",value:e.lastName,onChange:a,validation:i?.fieldErrors?.lastName&&{isValid:!1,errors:i.fieldErrors.lastName},required:!0}),(0,t.jsx)(g,{name:"displayName",label:"Display Name",type:"text",value:e.displayName,onChange:a,validation:i?.fieldErrors?.displayName&&{isValid:!1,errors:i.fieldErrors.displayName},required:!0}),(0,t.jsx)(g,{name:"email",label:"Email",type:"email",value:e.email,onChange:a,validation:i?.fieldErrors?.email&&{isValid:!1,errors:i.fieldErrors.email},required:!0}),n&&(0,t.jsx)("div",{className:"Ex5hkXhYBhWLC5efvtON",role:"alert",children:(0,t.jsx)("p",{children:n})}),(0,t.jsx)("div",{className:"j8_RDtfP4naF9zivnUzE",children:(0,t.jsx)(f.$,{variant:"primary",feature:"profile",onClick:s,disabled:r,"aria-busy":r,children:r?"Saving...":"Save Basic Information"})})]}),x=({data:e,onChange:a,validation:i,onSave:s,isSaving:r,error:n})=>(0,t.jsxs)("div",{className:"jqYWPvOe0ZAaE5SS84nx",children:[(0,t.jsx)("h2",{children:"Medical Information"}),(0,t.jsx)(g,{name:"medicalConditions",label:"Medical Conditions",type:"select",value:e.medicalConditions,onChange:a,validation:i?.fieldErrors?.medicalConditions&&{isValid:!1,errors:i.fieldErrors.medicalConditions},options:[{value:"none",label:"None"},{value:"heart_condition",label:"Heart Condition"},{value:"asthma",label:"Asthma"},{value:"diabetes",label:"Diabetes"},{value:"hypertension",label:"Hypertension"},{value:"other",label:"Other"}],isArray:!0,required:!0}),(0,t.jsx)(g,{name:"exerciseLimitations",label:"Exercise Limitations",type:"select",value:e.exerciseLimitations,onChange:a,validation:i?.fieldErrors?.exerciseLimitations&&{isValid:!1,errors:i.fieldErrors.exerciseLimitations},options:[{value:"none",label:"None"},{value:"joint_pain",label:"Joint Pain"},{value:"back_pain",label:"Back Pain"},{value:"limited_mobility",label:"Limited Mobility"},{value:"balance_issues",label:"Balance Issues"},{value:"other",label:"Other"}],isArray:!0}),(0,t.jsx)(g,{name:"medications",label:"Current Medications",type:"text",value:e.medications,onChange:a,validation:i?.fieldErrors?.medications&&{isValid:!1,errors:i.fieldErrors.medications}}),n&&(0,t.jsx)("div",{className:"wlYmLZt6YQKbC1nKip8W",role:"alert",children:(0,t.jsx)("p",{children:n})}),(0,t.jsx)("div",{className:"k6GHaNysSluxrdP_DPas",children:(0,t.jsx)(f.$,{variant:"primary",feature:"profile",onClick:s,disabled:r,"aria-busy":r,children:r?"Saving...":"Save Medical Information"})})]}),y=({data:e,onChange:a,validation:i,onSave:s,isSaving:r,error:n})=>(0,t.jsxs)("div",{className:"bAhHPrmwBtskG202JkCF",children:[(0,t.jsx)("h2",{children:"Account Settings"}),(0,t.jsx)(g,{name:"email",label:"Email",type:"email",value:e.email,onChange:a,validation:i?.fieldErrors?.email&&{isValid:!1,errors:i.fieldErrors.email},required:!0}),(0,t.jsx)(g,{name:"displayName",label:"Display Name",type:"text",value:e.displayName,onChange:a,validation:i?.fieldErrors?.displayName&&{isValid:!1,errors:i.fieldErrors.displayName},required:!0}),(0,t.jsx)(g,{name:"nickname",label:"Nickname",type:"text",value:e.nickname,onChange:a,validation:i?.fieldErrors?.nickname&&{isValid:!1,errors:i.fieldErrors.nickname}}),n&&(0,t.jsx)("div",{className:"luOgo5gfPcpkYEF1xyil",role:"alert",children:(0,t.jsx)("p",{children:n})}),(0,t.jsx)("div",{className:"hrBF9ELYFMnMTWLJH3NO",children:(0,t.jsx)(f.$,{variant:"primary",feature:"profile",onClick:s,disabled:r,"aria-busy":r,children:r?"Saving...":"Save Account Settings"})})]}),j=({title:e,children:a})=>(0,t.jsxs)("section",{className:"form-section",children:[(0,t.jsx)("h2",{className:"form-section__title",children:e}),(0,t.jsx)("div",{className:"form-section__content",children:a})]});var b=i(723);const w={height:0,weight:0,units:{height:"cm",weight:"kg",measurements:"cm"},preferences:{showMetric:!0}},_=(e,a)=>Number((2.54*(12*e+a)).toFixed(2)),N=e=>{const a=e/2.54,i=Math.floor(a/12),s=Math.round(a%12);return 12===s?{feet:i+1,inches:0}:{feet:i,inches:s}},k=({initialData:e,onUpdate:a})=>{const[i,s]=(0,r.useState)({...w,...e,units:{...w.units,...e?.units||{}},preferences:{...w.preferences,...e?.preferences||{}}}),[n,l]=(0,r.useState)(!1),[o,c]=(0,r.useState)(null);(0,r.useEffect)((()=>{console.log("Initializing form with data:",e);const{preferences:a}=e;let i,t;if(console.log("Form state initialized with preferences:",a),!a?.showMetric){const{feet:a,inches:s}=N(e.height);i=a,t=s}s((s=>({...e,heightFeet:i,heightInches:t,units:{...w.units,...e?.units||{}},preferences:{showMetric:a?.showMetric??!0}})))}),[e]);const d=(e,a)=>{s((i=>"preferences"===e?(console.log("Updating preferences:",{field:e,current:i.preferences,new:a}),{...i,preferences:{...i.preferences,...a}}):"number"==typeof i[e]||"chest"===e||"waist"===e||"hips"===e?{...i,[e]:""===a?void 0:parseFloat(a)||0}:{...i,[e]:a}))},h=e=>{s((a=>{const i={height:e?"cm":"ft",weight:e?"kg":"lbs",measurements:e?"cm":"in"};let s,t,r=a.height;if(e&&void 0!==a.heightFeet&&void 0!==a.heightInches)r=_(a.heightFeet,a.heightInches),s=void 0,t=void 0;else if(!e){const{feet:e,inches:i}=N(a.height);s=e,t=i}const n={height:r,heightFeet:s,heightInches:t,weight:a.weight?u(a.weight,a.units?.weight||"kg",i.weight):a.weight,chest:a.chest?u(a.chest,a.units?.measurements||"cm",i.measurements):a.chest,waist:a.waist?u(a.waist,a.units?.measurements||"cm",i.measurements):a.waist,hips:a.hips?u(a.hips,a.units?.measurements||"cm",i.measurements):a.hips};return console.log("Switching units:",{from:a.units,to:i,oldValues:{height:a.height,heightFeet:a.heightFeet,heightInches:a.heightInches},newValues:n}),{...a,...n,units:i,preferences:{...a.preferences,showMetric:e}}}))},u=(e,a,i)=>{if(a===i)return e;let s=e;return"ft"===a||"in"===a?s=2.54*e:"lbs"===a&&(s=.453592*e),Number("ft"===i||"in"===i?(s/2.54).toFixed(2):"lbs"===i?(s/.453592).toFixed(2):s.toFixed(2))},m=e=>{const{units:a}=i;return a&&a[e]||w.units[e]},p=(e,a)=>{const t="feet"===e?parseFloat(a)||0:i.heightFeet??0,r="inches"===e?parseFloat(a)||0:i.heightInches??0,n=r>=12?11:r;s((e=>({...e,heightFeet:t,heightInches:n,height:_(t,n)})))};return(0,t.jsx)(j,{title:(0,b.__)("Physical Information"),children:(0,t.jsxs)("form",{onSubmit:async e=>{if(e.preventDefault(),!n)try{l(!0),await a({...i,preferences:{showMetric:i.preferences.showMetric}}),c(null)}catch(e){c(e instanceof Error?e.message:"Failed to update measurements")}finally{l(!1)}},className:"form-section__grid","aria-label":"Physical Measurements",children:[o&&(0,t.jsx)("div",{className:"form-error",role:"alert","aria-live":"polite",children:o}),(0,t.jsxs)("fieldset",{children:[(0,t.jsx)("legend",{children:(0,b.__)("Basic Measurements")}),(0,t.jsxs)("div",{className:"form-group",children:[(0,t.jsx)("label",{htmlFor:"height",children:(0,b.__)("Height")}),i.preferences?.showMetric?(0,t.jsxs)("div",{className:"input-wrapper",children:[(0,t.jsx)("input",{id:"height",type:"number",step:"0.1",value:i.height,onChange:e=>d("height",e.target.value),required:!0,"aria-required":"true",min:"0",max:"300"}),(0,t.jsx)("span",{"aria-label":"unit",children:m("height")})]}):(0,t.jsxs)("div",{className:"input-wrapper",children:[(0,t.jsx)("input",{id:"height-feet",type:"number",value:i.heightFeet??"",onChange:e=>p("feet",e.target.value),min:"0",max:"8",required:!0,"aria-required":"true","aria-label":"feet"}),(0,t.jsx)("span",{"aria-label":"feet",children:"ft"}),(0,t.jsx)("input",{id:"height-inches",type:"number",value:i.heightInches??"",onChange:e=>p("inches",e.target.value),min:"0",max:"11",required:!0,"aria-required":"true","aria-label":"inches"}),(0,t.jsx)("span",{"aria-label":"inches",children:"in"})]})]}),(0,t.jsxs)("div",{className:"form-group",children:[(0,t.jsx)("label",{htmlFor:"weight",children:(0,b.__)("Weight")}),(0,t.jsxs)("div",{className:"input-wrapper",children:[(0,t.jsx)("input",{id:"weight",type:"number",step:"0.1",value:i.weight,onChange:e=>d("weight",e.target.value),required:!0,"aria-required":"true",min:"0"}),(0,t.jsx)("span",{"aria-label":"unit",children:m("weight")})]})]})]}),(0,t.jsxs)("fieldset",{children:[(0,t.jsx)("legend",{children:(0,b.__)("Additional Measurements")}),(0,t.jsxs)("div",{className:"form-group",children:[(0,t.jsx)("label",{htmlFor:"chest",children:(0,b.__)("Chest")}),(0,t.jsxs)("div",{className:"input-wrapper",children:[(0,t.jsx)("input",{id:"chest",type:"number",step:"0.1",value:i.chest||"",onChange:e=>d("chest",e.target.value),min:"0"}),(0,t.jsx)("span",{"aria-label":"unit",children:m("measurements")})]})]}),(0,t.jsxs)("div",{className:"form-group",children:[(0,t.jsx)("label",{htmlFor:"waist",children:(0,b.__)("Waist")}),(0,t.jsxs)("div",{className:"input-wrapper",children:[(0,t.jsx)("input",{id:"waist",type:"number",step:"0.1",value:i.waist||"",onChange:e=>d("waist",e.target.value),min:"0"}),(0,t.jsx)("span",{"aria-label":"unit",children:m("measurements")})]})]}),(0,t.jsxs)("div",{className:"form-group",children:[(0,t.jsx)("label",{htmlFor:"hips",children:(0,b.__)("Hips")}),(0,t.jsxs)("div",{className:"input-wrapper",children:[(0,t.jsx)("input",{id:"hips",type:"number",step:"0.1",value:i.hips||"",onChange:e=>d("hips",e.target.value),min:"0"}),(0,t.jsx)("span",{"aria-label":"unit",children:m("measurements")})]})]})]}),(0,t.jsxs)("fieldset",{children:[(0,t.jsx)("legend",{children:(0,b.__)("Preferences")}),(0,t.jsx)("div",{className:"form-group preferences-group",children:(0,t.jsxs)("label",{children:[(0,t.jsx)("input",{type:"checkbox",checked:i.preferences?.showMetric??!1,onChange:e=>d("preferences",{...i.preferences,showMetric:e.target.checked})}),(0,b.__)("Show Metric")]})}),(0,t.jsxs)("div",{className:"form-group unit-toggle",children:[(0,t.jsx)("span",{className:"toggle-label",id:"unit-system-label",children:(0,b.__)("Unit System")}),(0,t.jsxs)("div",{className:"toggle-buttons",role:"radiogroup","aria-labelledby":"unit-system-label","aria-label":(0,b.__)("Select unit system"),children:[(0,t.jsx)(f.$,{type:"button",variant:"secondary",feature:"physical",onClick:()=>{h(!0),d("preferences",{...i.preferences,showMetric:!0})},disabled:n,"aria-checked":!0===i.preferences?.showMetric,role:"radio",tabIndex:i.preferences?.showMetric?0:-1,className:i.preferences?.showMetric?"active":"",children:(0,b.__)("Metric")}),(0,t.jsx)(f.$,{type:"button",variant:"secondary",feature:"physical",onClick:()=>{h(!1),d("preferences",{...i.preferences,showMetric:!1})},disabled:n,"aria-checked":!1===i.preferences?.showMetric,role:"radio",tabIndex:i.preferences?.showMetric?-1:0,className:i.preferences?.showMetric?"":"active",children:(0,b.__)("Imperial")})]})]})]}),(0,t.jsx)(f.$,{type:"submit",disabled:n,"aria-busy":n,feature:"physical",variant:"primary",children:n?(0,b.__)("Saving..."):(0,b.__)("Save Changes")})]})})},C="/wp-json/athlete-dashboard/v1/profile/physical",E=()=>{console.log("=== Nonce Debug ==="),console.log("Window athleteDashboardData:",window.athleteDashboardData);const e=window.athleteDashboardData;return e?.nonce?(console.log("Found nonce:",e.nonce),e.nonce):(console.error("WordPress nonce not found in athleteDashboardData"),"")},S=(e="GET",a)=>{const i={method:e,credentials:"same-origin",headers:{"X-WP-Nonce":E(),"Content-Type":"application/json"},...a?{body:JSON.stringify(a)}:{}};return console.log("Request options:",i),i},P={async getPhysicalData(e){console.log("=== Get Physical Data Debug ==="),console.log(`1. Fetching physical data for user ${e}`);const a=await fetch(`${C}/${e}`,S());if(!a.ok){if(404===a.status){console.log("2. No physical data found, returning defaults");const e={height:0,weight:0,units:{height:"cm",weight:"kg",measurements:"cm"},preferences:{showMetric:!0}};return console.log("3. Default values:",e),e}throw new Error("Failed to load physical data")}const i=await a.json();console.log("2. Raw API response:",i);const s={height:i.height||0,weight:i.weight||0,units:{height:i.units?.height||"cm",weight:i.units?.weight||"kg",measurements:i.units?.measurements||"cm"},preferences:{showMetric:i.preferences?.showMetric??!0}};return"number"==typeof i.chest&&(s.chest=i.chest),"number"==typeof i.waist&&(s.waist=i.waist),"number"==typeof i.hips&&(s.hips=i.hips),console.log("3. Processed physical data:",s),s},async updatePhysicalData(e,a){if(console.log("=== Physical Data Update Debug ==="),console.log("1. Raw input data:",a),!a||!a.units||!a.preferences)throw console.error("Missing required data structures:",{data:a}),new Error("Invalid physical data structure");const i={height:a.height,weight:a.weight,units:{height:a.units.height,weight:a.units.weight,measurements:a.units.measurements||"cm"},preferences:{showMetric:a.preferences.showMetric}};"number"==typeof a.chest&&(i.chest=a.chest),"number"==typeof a.waist&&(i.waist=a.waist),"number"==typeof a.hips&&(i.hips=a.hips),console.log("2. Final payload:",i);const s=await fetch(`${C}/${e}`,S("POST",i));if(!s.ok){const e=await s.json();throw console.error("Update failed:",e),new Error(e.message||"Failed to update physical data")}return s.json()},async getPhysicalHistory(e,a=0,i=10){console.log(`Fetching physical history for user ${e}`);const s=await fetch(`${C}/${e}/history?offset=${a}&limit=${i}`,S());if(!s.ok){if(404===s.status)return console.log("No history found, returning empty array"),{items:[],total:0,limit:i,offset:a};throw new Error("Failed to load physical history")}return s.json()}},F="cm",I=({userId:e})=>{const[a,i]=(0,r.useState)([]),[s,n]=(0,r.useState)(!0),[l,o]=(0,r.useState)(null),[c,d]=(0,r.useState)({offset:0,limit:10,total:0});(0,r.useEffect)((()=>{console.log("HistoryView mounted/updated. UserId:",e),e&&(async()=>{try{console.log("Loading history for user:",e),n(!0);const a=await P.getPhysicalHistory(e,c.offset,c.limit);console.log("History response:",a);const s=a.success?a.data:{items:[],total:0,limit:10,offset:0};console.log("Unwrapped history data:",s),i(s.items),d((e=>({...e,total:s.total}))),o(null)}catch(e){console.error("Failed to load history:",e),o("Failed to load measurement history"),i([])}finally{n(!1)}})()}),[e,c.offset,c.limit]);const h=(e,a,i)=>null==e?"-":`${e} ${a||i}`;return s?(console.log("HistoryView: Loading state"),(0,t.jsx)("div",{className:"loading",role:"status","aria-live":"polite",children:(0,b.__)("Loading history...")})):l?(console.log("HistoryView: Error state:",l),(0,t.jsxs)("div",{className:"error",role:"alert",children:[(0,b.__)("Error:")," ",l]})):(console.log("HistoryView: Rendering table with history:",a),(0,t.jsxs)("section",{className:"history-section","aria-labelledby":"history-title",children:[(0,t.jsx)("h3",{id:"history-title",children:(0,b.__)("Measurement History")}),0===a.length?(0,t.jsx)("p",{children:(0,b.__)("No measurement history available.")}):(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("div",{className:"table-wrapper",role:"region","aria-label":"Measurement history table",tabIndex:0,children:(0,t.jsxs)("table",{className:"history-table",children:[(0,t.jsx)("thead",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{scope:"col",children:(0,b.__)("Date")}),(0,t.jsx)("th",{scope:"col",children:(0,b.__)("Height")}),(0,t.jsx)("th",{scope:"col",children:(0,b.__)("Weight")}),(0,t.jsx)("th",{scope:"col",children:(0,b.__)("Chest")}),(0,t.jsx)("th",{scope:"col",children:(0,b.__)("Waist")}),(0,t.jsx)("th",{scope:"col",children:(0,b.__)("Hips")})]})}),(0,t.jsx)("tbody",{children:a.map((e=>(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:new Date(e.date).toLocaleDateString()}),(0,t.jsx)("td",{children:h(e.height,e?.units?.height,"cm")}),(0,t.jsx)("td",{children:h(e.weight,e?.units?.weight,"kg")}),(0,t.jsx)("td",{children:h(e.chest,e?.units?.measurements,F)}),(0,t.jsx)("td",{children:h(e.waist,e?.units?.measurements,F)}),(0,t.jsx)("td",{children:h(e.hips,e?.units?.measurements,F)})]},e.id)))})]})}),(0,t.jsxs)("nav",{className:"pagination","aria-label":"History pagination",children:[(0,t.jsx)(f.$,{variant:"secondary",feature:"physical",onClick:()=>{c.offset>0&&d((e=>({...e,offset:Math.max(0,e.offset-e.limit)})))},disabled:0===c.offset,"aria-label":"Previous page",children:(0,b.__)("Previous")}),(0,t.jsxs)("span",{children:[(0,b.__)("Showing")," ",c.offset+1," ",(0,b.__)("to")," ",Math.min(c.offset+c.limit,c.total)," ",(0,b.__)("of")," ",c.total]}),(0,t.jsx)(f.$,{variant:"secondary",feature:"physical",onClick:()=>{c.offset+c.limit<c.total&&d((e=>({...e,offset:e.offset+e.limit})))},disabled:c.offset+c.limit>=c.total,"aria-label":"Next page",children:(0,b.__)("Next")})]})]})]}))},D={height:0,weight:0,units:{height:"cm",weight:"kg",measurements:"cm"},preferences:{showMetric:!0}},M=({userId:e,onSave:a,isSaving:i,error:s})=>{const[n,l]=(0,r.useState)(D),[o,c]=(0,r.useState)(!0),[d,h]=(0,r.useState)(null);(0,r.useEffect)((()=>{u()}),[e]);const u=async()=>{try{const a=await P.getPhysicalData(e);console.log("Physical data loaded:",a),l({...D,...a,units:{...D.units,...a?.units||{}},preferences:{...D.preferences,...a?.preferences||{}}}),h(null)}catch(e){console.error("Failed to load physical data:",e),h(e instanceof Error?e.message:"Failed to load physical data")}finally{c(!1)}};return o?(0,t.jsx)(j,{title:"Physical Information",children:(0,t.jsx)("div",{className:"physical-section__loading",role:"status","aria-live":"polite",children:"Loading physical data..."})}):(0,t.jsxs)(j,{title:"Physical Information",children:[(0,t.jsx)("p",{className:"section-description",children:"Track your physical measurements and monitor your progress over time."}),(0,t.jsx)(k,{initialData:n,onUpdate:async i=>{c(!0);try{console.log("Updating physical data:",i);const s=await P.updatePhysicalData(e,i);console.log("Update successful:",s),l({...D,...s,units:{...D.units,...s?.units||{}},preferences:{...D.preferences,...s?.preferences||{}}}),await a(),h(null)}catch(e){console.error("Update failed:",e),h(e instanceof Error?e.message:"Failed to update physical data")}finally{c(!1)}}}),(0,t.jsx)(I,{userId:e}),(d||s)&&(0,t.jsx)("div",{className:"physical-section__error",role:"alert",children:(0,t.jsx)("p",{children:d||s})})]})};var R=i(87);const L=[{value:"knee_pain",label:"Knee Pain"},{value:"back_pain",label:"Back Pain"},{value:"shoulder_pain",label:"Shoulder Pain"},{value:"ankle_sprain",label:"Ankle Sprain"},{value:"muscle_strain",label:"Muscle Strain"},{value:"tendonitis",label:"Tendonitis"}],$=(...e)=>e.filter(((e,a,i)=>Boolean(e)&&""!==e.trim()&&i.indexOf(e)===a)).join(" ").trim();var U={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const q=(0,r.forwardRef)((({color:e="currentColor",size:a=24,strokeWidth:i=2,absoluteStrokeWidth:s,className:t="",children:n,iconNode:l,...o},c)=>(0,r.createElement)("svg",{ref:c,...U,width:a,height:a,stroke:e,strokeWidth:s?24*Number(i)/Number(a):i,className:$("lucide",t),...o},[...l.map((([e,a])=>(0,r.createElement)(e,a))),...Array.isArray(n)?n:[n]]))),A=(e,a)=>{const i=(0,r.forwardRef)((({className:i,...s},t)=>{return(0,r.createElement)(q,{ref:t,iconNode:a,className:$(`lucide-${n=e,n.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,i),...s});var n}));return i.displayName=`${e}`,i},T=A("CirclePlus",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M8 12h8",key:"1wcyev"}],["path",{d:"M12 8v8",key:"napkw2"}]]),H=A("CircleX",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"m15 9-6 6",key:"1uzhvr"}],["path",{d:"m9 9 6 6",key:"z0biqf"}]]);function O({items:e,onAdd:a,onUpdate:i,onRemove:s,title:r,description:n,fields:l,predefinedItems:o,className:c=""}){const[d,h]=(0,R.useState)(""),[u,m]=(0,R.useState)(""),p=(e,i=!1)=>{if(i)a({id:`item_${Date.now()}`,name:e});else{const i=o?.find((a=>a.value===e));a({id:`item_${Date.now()}`,name:i?.label||""})}h(""),m("")},g=(e,a)=>{const s=e[a.key];if("name"===a.key&&!e.isCustom)return null;switch(a.type){case"textarea":return(0,t.jsx)("textarea",{value:s,onChange:s=>i(e.id,{[a.key]:s.target.value}),placeholder:a.placeholder,className:"tracker__input tracker__textarea"});case"select":return(0,t.jsx)("select",{value:s,onChange:s=>i(e.id,{[a.key]:s.target.value}),className:"tracker__input tracker__select",children:a.options?.map((e=>(0,t.jsx)("option",{value:e.value,className:"tracker__select-option",children:e.label},e.value)))});default:return(0,t.jsx)("input",{type:"text",value:s,onChange:s=>i(e.id,{[a.key]:s.target.value}),placeholder:a.placeholder,className:"tracker__input"})}};return(0,t.jsxs)("div",{className:`form-section tracker ${c}`,children:[(0,t.jsxs)("div",{className:"tracker__header",children:[(0,t.jsx)("h2",{className:"tracker__title",children:r}),(0,t.jsx)("p",{className:"tracker__description",children:n})]}),o&&(0,t.jsxs)("div",{className:"tracker__form-group",children:[(0,t.jsx)("label",{className:"tracker__label",children:"Select Predefined Item"}),(0,t.jsxs)("select",{value:u,onChange:e=>{m(e.target.value),e.target.value&&p(e.target.value,!1)},className:"tracker__input tracker__select",children:[(0,t.jsx)("option",{value:"",className:"tracker__select-option",children:"Select an item..."}),o.map((e=>(0,t.jsx)("option",{value:e.value,className:"tracker__select-option",children:e.label},e.value)))]})]}),(0,t.jsxs)("div",{className:"tracker__form-group",children:[(0,t.jsx)("label",{className:"tracker__label",children:"Add Custom Item"}),(0,t.jsxs)("div",{className:"tracker__input-group",children:[(0,t.jsx)("input",{type:"text",value:d,onChange:e=>h(e.target.value),placeholder:"Enter custom item...",className:"tracker__input"}),(0,t.jsxs)(f.$,{variant:"secondary",feature:"profile",onClick:()=>d&&p(d,!0),disabled:!d,children:[(0,t.jsx)(T,{size:16}),"Add"]})]})]}),e.length>0&&(0,t.jsx)("div",{className:"tracker__list",children:e.map((e=>(0,t.jsxs)("div",{className:"tracker__item",children:[(0,t.jsxs)("div",{className:"tracker__item-header",children:[(0,t.jsx)("h5",{className:"tracker__item-title",children:e.name}),(0,t.jsx)(f.$,{variant:"secondary",feature:"profile",onClick:()=>s(e.id),"aria-label":"Remove item",children:(0,t.jsx)(H,{size:16})})]}),l.map((a=>(0,t.jsxs)("div",{className:"tracker__form-group",children:[(0,t.jsx)("label",{className:"tracker__label",children:a.label}),g(e,a)]},String(a.key))))]},e.id)))})]})}const V=({injuries:e,onChange:a,onSave:i,isSaving:s,error:r,className:n=""})=>{const l=(0,R.useCallback)((i=>{const s={id:`injury_${Date.now()}`,name:i.name||"",details:"",date:(new Date).toISOString(),type:"",description:"",isCustom:!0,status:"active",severity:"medium"};a([...e,s])}),[e,a]),o=(0,R.useCallback)(((i,s)=>{const t=e.map((e=>e.id===i?{...e,...s}:e));a(t)}),[e,a]),c=(0,R.useCallback)((i=>{a(e.filter((e=>e.id!==i)))}),[e,a]);return(0,t.jsxs)("div",{className:"c4WPB6nn5yUtVi_6Crl8",children:[(0,t.jsx)(O,{items:e,onAdd:l,onUpdate:o,onRemove:c,title:"Injury Tracker",description:"Track and manage your injuries to optimize your training.",fields:[{label:"Details",key:"details",type:"textarea",placeholder:"Add details about this injury..."},{label:"Severity",key:"severity",type:"select",options:[{value:"low",label:"Low"},{value:"medium",label:"Medium"},{value:"high",label:"High"}]},{label:"Status",key:"status",type:"select",options:[{value:"active",label:"Active"},{value:"recovered",label:"Recovered"}]}],predefinedItems:L,className:n}),r&&(0,t.jsx)("div",{className:"DXSCDfOR8OTfbLtPtq7c",role:"alert",children:(0,t.jsx)("p",{children:r})}),(0,t.jsx)("div",{className:"VPXAxQ2vk0FNQgl_RZUg",children:(0,t.jsx)(f.$,{variant:"primary",feature:"profile",onClick:i,disabled:s,"aria-busy":s,children:s?"Saving...":"Save Injury Information"})})]})},W=({context:e})=>{const{user:a}=(0,o.Jd)(),{profile:i,updateProfile:s,refreshProfile:l,isLoading:c,error:h}=(()=>{const e=(0,r.useContext)(d);if(!e)throw new Error("useProfile must be used within a ProfileProvider");return e})(),[u,g]=(0,r.useState)(i),[j,b]=(0,r.useState)({}),[w,_]=(0,r.useState)({});if(n().useEffect((()=>{i&&g(i)}),[i]),n().useEffect((()=>{a?.id&&l()}),[a?.id,l]),c)return(0,t.jsx)(m,{label:"Loading profile..."});if(h)return(0,t.jsxs)("div",{className:"profile-error",children:[(0,t.jsx)("h3",{children:"Error Loading Profile"}),(0,t.jsx)("p",{children:h}),(0,t.jsx)(f.$,{variant:"secondary",feature:"profile",onClick:l,disabled:c,children:"Retry"})]});if(!a||!i||!u)return(0,t.jsxs)("div",{className:"profile-error",children:[(0,t.jsx)("h3",{children:"Profile Not Available"}),(0,t.jsx)("p",{children:"Unable to load profile information. Please ensure you are logged in."}),(0,t.jsx)(f.$,{variant:"secondary",feature:"profile",onClick:l,disabled:c,children:"Retry"})]});const N=(e,a)=>{g((i=>i?{...i,[e]:a}:i)),b((a=>({...a,[e.includes("medical")?"medical":e.includes("account")?"account":e.includes("physical")?"physical":e.includes("injuries")?"injuries":"basic"]:void 0})))},k=async a=>{try{b((e=>({...e,[a]:void 0}))),_((e=>({...e,[a]:!0}))),console.group(`Profile ${a} Save`),console.log(`Saving ${a} changes:`,u);const i={basic:["firstName","lastName","displayName","email"],medical:["medicalConditions","exerciseLimitations","medications"],account:["email","displayName","nickname"],physical:["height","weight","age","gender"],injuries:["injuries"]},t=(e=>{const a=[];return e.forEach((e=>{const i=((e,a)=>{if(null==a||""===a)return["age","gender","height","weight","fitnessLevel","activityLevel"].includes(e)?"Field cannot be empty":null;const i=Number(a),s=["beginner","intermediate","advanced"],t=["sedentary","lightly_active","moderately_active","very_active","extra_active"],r=["male","female","other","prefer_not_to_say"];switch(e){case"email":return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(a)?null:"Invalid email address";case"age":return i>=13&&i<=120?null:"Age must be between 13 and 120";case"height":return i>=100&&i<=250?null:"Height must be between 100cm and 250cm";case"weight":return i>=30&&i<=300?null:"Weight must be between 30kg and 300kg";case"fitnessLevel":return s.includes(a)?null:"Invalid fitness level";case"activityLevel":return t.includes(a)?null:"Invalid activity level";case"gender":return r.includes(a)?null:"Invalid gender selection";case"injuries":return Array.isArray(a)?a.every((e=>e.id&&e.name&&e.status&&["active","recovered"].includes(e.status)))?null:"Invalid injury data":"Injuries must be an array";case"medicalConditions":case"exerciseLimitations":return Array.isArray(a)?0===a.length||a.every((e=>"string"==typeof e))?null:"Invalid condition format":"Must be an array of conditions";case"medications":return"string"==typeof a?null:"Must be a text value";default:return null}})(e,u[e]);i&&a.push(`${e}: ${i}`)})),a})(i[a]);if(t.length>0)throw new Error(t.join(", "));const r=i[a].reduce(((e,a)=>({...e,[a]:u[a]})),{});await s(r),e.debug&&console.log(`[ProfileLayout] ${a} saved successfully:`,r)}catch(i){b((e=>({...e,[a]:i instanceof Error?i.message:`Failed to save ${a}`}))),e.debug&&console.error(`[ProfileLayout] Error saving ${a}:`,i)}finally{_((e=>({...e,[a]:!1}))),console.groupEnd()}};return(0,t.jsx)(p.t,{children:(0,t.jsxs)("div",{className:"profile-layout",children:[(0,t.jsxs)("h1",{children:["Welcome, ",i.displayName||i.username]}),(0,t.jsxs)("div",{className:"profile-sections",children:[(0,t.jsx)(v,{data:u,onChange:N,onSave:()=>k("basic"),isSaving:w.basic,error:j.basic}),(0,t.jsx)(x,{data:u,onChange:N,onSave:()=>k("medical"),isSaving:w.medical,error:j.medical}),(0,t.jsx)(y,{data:u,onChange:N,onSave:()=>k("account"),isSaving:w.account,error:j.account}),(0,t.jsx)(M,{userId:a.id,onSave:()=>k("physical"),isSaving:w.physical,error:j.physical}),(0,t.jsx)(V,{injuries:u.injuries||[],onChange:e=>{g((a=>a?{...a,injuries:e}:a)),b((e=>({...e,injuries:void 0})))},onSave:()=>k("injuries"),isSaving:w.injuries,error:j.injuries})]})]})})};class z{constructor(){this.identifier="profile",this.metadata={name:"Profile",description:"Personalize your journey",order:1},this.context=null}async register(e){this.context=e,e.debug&&console.log("[ProfileFeature] Registered")}async init(){this.context&&(this.context.debug&&console.log("[ProfileFeature] Initialized"),this.context.dispatch("athlete-dashboard")({type:s.FETCH_REQUEST,payload:{userId:0}}))}isEnabled(){return!0}render(){return this.context?(0,t.jsx)(o.vu,{children:(0,t.jsx)(u,{children:(0,t.jsx)(W,{context:this.context})})}):(console.error("[ProfileFeature] Context not initialized"),null)}async cleanup(){this.context?.debug&&console.log("[ProfileFeature] Cleanup"),this.context=null}onNavigate(){this.context&&this.init()}onUserChange(){this.context&&this.init()}}}}]);